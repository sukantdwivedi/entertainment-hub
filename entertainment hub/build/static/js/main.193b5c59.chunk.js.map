{"version":3,"sources":["components/header/Header.js","components/MainNav.js","components/Pagination/CustomPagination.js","config/config.js","components/Carousel/Carousel.js","components/ContentModal/ContentModal.js","components/SingleContent/SingleContent.js","Pages/Trending/Trending.js","components/Genres.js","hooks/useGenre.js","Pages/Movies/Movies.js","Pages/Series/Series.js","Pages/Search/Search.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","onClick","window","scroll","className","useStyles","makeStyles","root","width","position","bottom","backgroundColor","zIndex","SimpleBottomNavigation","classes","React","useState","value","setValue","history","useHistory","useEffect","push","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","style","color","label","icon","darkTheme","createMuiTheme","palette","type","CustomPagination","setPage","numOfPages","display","justifyContent","marginTop","ThemeProvider","theme","Pagination","count","e","page","target","textContent","img_300","img_500","unavailable","handleDragStart","preventDefault","Gallery","id","media_type","credits","setCredits","items","map","c","src","profile_path","alt","name","onDragStart","fetchCredits","a","axios","get","process","data","cast","mouseTracking","infinite","disableDotsControls","disableButtonsControls","responsive","autoPlay","modal","alignItems","paper","height","border","borderRadius","boxShadow","shadows","padding","spacing","TransitionsModal","children","open","setOpen","content","setContent","video","setVideo","fetchData","fetchVideo","results","key","cursor","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","poster_path","title","backdrop_path","first_air_date","release_date","substring","tagline","overview","Button","variant","startIcon","href","SingleContent","poster","date","vote_average","Badge","badgeContent","Trending","fetchTrending","fisrt_air_date","Genres","selectedGenres","setSelectedGenres","genres","setGenres","fetchGenres","genre","Chip","margin","clickable","size","onDelete","filter","selected","handleRemove","g","handleAdd","useGenre","length","reduce","acc","curr","Movies","setNumOfPages","gerneForURL","fetchMovies","total_pages","Series","Search","setType","searchText","setSearchText","primary","main","fetchSearch","console","error","TextField","flex","marginLeft","Tabs","indicatorColor","textColor","paddingBottom","Tab","App","Container","path","component","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.193b5c59.chunk.js","sourcesContent":["import \"./Header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <span onClick={() => window.scroll(0, 0)} className=\"header\"> 🎬 Entertainment Hub 🎥 </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    backgroundColor: '#2d313a',\r\n    zIndex: 100,\r\n  },\r\n});\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(value===0)\r\n      history.push(\"/\");\r\n    else if(value===1)\r\n      history.push(\"/movies\");\r\n    else if(value===2)\r\n      history.push(\"/series\");\r\n    else if(value===3)\r\n      history.push(\"/search\");\r\n  }, [value, history])\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction \r\n        style={{color:\"white\"}} \r\n        label=\"Trending\" \r\n        icon={<WhatshotIcon />}\r\n        />\r\n      <BottomNavigationAction \r\n        style={{color:\"white\"}} \r\n        label=\"Movies\" \r\n        icon={<MovieIcon />}\r\n        />\r\n      <BottomNavigationAction \r\n        style={{color:\"white\"}} \r\n        label=\"TV Series\" \r\n        icon={<TvIcon />}\r\n        />\r\n      <BottomNavigationAction \r\n        style={{color:\"white\"}}    \r\n        label=\"Search\" \r\n        icon={<SearchIcon />}\r\n        />\r\n    </BottomNavigation>\r\n  );\r\n}","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst darkTheme=createMuiTheme({\r\n    palette: {\r\n        type:'dark',\r\n    },\r\n});\r\n\r\nconst CustomPagination = ({setPage, numOfPages=10}) => {\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n        window.scroll(0, 0);\r\n    };\r\n\r\n    return (\r\n        <div style={{width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: 10\r\n            }}>\r\n            <ThemeProvider theme={darkTheme}>\r\n                <Pagination \r\n                    count={numOfPages}\r\n                    onChange={(e) => handlePageChange(e.target.textContent)}\r\n                    color=\"primary\"\r\n                    />\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomPagination\r\n","// image sizes for tmdb\r\nexport const img_300 = \"https://image.tmdb.org/t/p/w300\";\r\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n//contentmodal and singleContent\r\nexport const unavailable = \"https://www.moviesnews.com/img/films/poster-holder.jpg\";\r\n\r\n// contentModal\r\nexport const unavailableLandscape =\r\n  \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\";\r\n\r\n// For Carousel\r\nexport const noPicture =\r\n  \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport { img_300, noPicture } from \"../../config/config\";\r\nimport \"./Carousel.css\";\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\n\r\nconst Gallery = ({ id, media_type }) => {\r\n  const [credits, setCredits] = useState([]);\r\n\r\n  const items = credits.map((c) => (\r\n    <div className=\"carouselItem\">\r\n      <img\r\n        src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\r\n        alt={c?.name}\r\n        onDragStart={handleDragStart}\r\n        className=\"carouselItem__img\"\r\n      />\r\n      <b className=\"carouselItem__txt\">{c?.name}</b>\r\n    </div>\r\n  ));\r\n\r\n  const responsive = {\r\n    0: {\r\n      items: 3,\r\n    },\r\n    512: {\r\n      items: 5,\r\n    },\r\n    1024: {\r\n      items: 7,\r\n    },\r\n  };\r\n\r\n  const fetchCredits = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/${media_type}/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n    setCredits(data.cast);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCredits();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <AliceCarousel\r\n      mouseTracking\r\n      infinite\r\n      disableDotsControls\r\n      disableButtonsControls\r\n      responsive={responsive}\r\n      items={items}\r\n      autoPlay\r\n    />\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport {\r\n  img_500,\r\n  unavailable,\r\n  unavailableLandscape,\r\n} from \"../../config/config\";\r\nimport \"./ContentModal.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport Carousel from \"../Carousel/Carousel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    width: \"90%\",\r\n    height: \"80%\",\r\n    backgroundColor: \"#39445a\",\r\n    border: \"1px solid #282c34\",\r\n    borderRadius: 10,\r\n    color: \"white\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 1, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal({ children, media_type, id }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] = useState();\r\n  const [video, setVideo] = useState();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/${media_type}/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n\r\n    setContent(data);\r\n    // console.log(data);\r\n  };\r\n\r\n  const fetchVideo = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n\r\n    setVideo(data.results[0]?.key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchVideo();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"media\"\r\n        style={{ cursor: \"pointer\" }}\r\n        color=\"inherit\"\r\n        onClick={handleOpen}\r\n      >\r\n        {children}\r\n      </div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          {content && (\r\n            <div className={classes.paper}>\r\n              <div className=\"ContentModal\">\r\n                <img\r\n                  src={\r\n                    content.poster_path\r\n                      ? `${img_500}/${content.poster_path}`\r\n                      : unavailable\r\n                  }\r\n                  alt={content.name || content.title}\r\n                  className=\"ContentModal__portrait\"\r\n                />\r\n                <img\r\n                  src={\r\n                    content.backdrop_path\r\n                      ? `${img_500}/${content.backdrop_path}`\r\n                      : unavailableLandscape\r\n                  }\r\n                  alt={content.name || content.title}\r\n                  className=\"ContentModal__landscape\"\r\n                />\r\n                <div className=\"ContentModal__about\">\r\n                  <span className=\"ContentModal__title\">\r\n                    {content.name || content.title} (\r\n                    {(\r\n                      content.first_air_date ||\r\n                      content.release_date ||\r\n                      \"-----\"\r\n                    ).substring(0, 4)}\r\n                    )\r\n                  </span>\r\n                  {content.tagline && (\r\n                    <i className=\"tagline\">{content.tagline}</i>\r\n                  )}\r\n\r\n                  <span className=\"ContentModal__description\">\r\n                    {content.overview}\r\n                  </span>\r\n\r\n                  <div>\r\n                    <Carousel id={id} media_type={media_type} />\r\n                  </div>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<YouTubeIcon />}\r\n                    color=\"secondary\"\r\n                    target=\"__blank\"\r\n                    href={`https://www.youtube.com/watch?v=${video}`}\r\n                  >\r\n                    Watch the Trailer\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","import { Badge } from \"@material-ui/core\";\r\nimport { img_300, unavailable } from \"../../config/config\";\r\nimport \"./SingleContent.css\";\r\nimport ContentModal from \"../ContentModal/ContentModal\";\r\n\r\nconst SingleContent = ({\r\n  id,\r\n  poster,\r\n  title,\r\n  date,\r\n  media_type,\r\n  vote_average,\r\n}) => {\r\n  return (\r\n    <ContentModal media_type={media_type} id={id}>\r\n      <Badge\r\n        badgeContent={vote_average}\r\n        color={vote_average > 6 ? \"primary\" : \"secondary\"}\r\n      />\r\n      <img\r\n        className=\"poster\"\r\n        src={poster ? `${img_300}${poster}` : unavailable}\r\n        alt={title}\r\n      />\r\n      <b className=\"title\">{title}</b>\r\n      <span className=\"subTitle\">\r\n        {media_type === \"tv\" ? \"TV Series\" : \"Movie\"}\r\n        <span className=\"subTitle\">{date}</span>\r\n      </span>\r\n    </ContentModal>\r\n  );\r\n};\r\n\r\nexport default SingleContent;","import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport \"../../components/SingleContent/SingleContent\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport './Trending.css';\r\n\r\nconst Trending = () => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [content, setContent] = useState([]);\r\n\r\n    const fetchTrending= async () => {\r\n        const { data } = await axios.get(`\r\n        https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`)\r\n\r\n        setContent(data.results);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTrending();\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    return (\r\n        <div>\r\n            <span className='pageTitle'>Trending</span>\r\n            <div className=\"trending\">\r\n                {content && \r\n                    content.map((c) => (\r\n                    <SingleContent key={c.id} id={c.id} poster={c.poster_path} title={c.title || c.name} date={c.fisrt_air_date || c.release_date} media_type={c.media_type} vote_average={c.vote_average} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <CustomPagination setPage={setPage}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","import { Chip } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Genres = ({\r\n  selectedGenres,\r\n  setSelectedGenres,\r\n  genres,\r\n  setGenres,\r\n  type,\r\n  setPage,\r\n}) => {\r\n  const handleAdd = (genre) => {\r\n    setSelectedGenres([...selectedGenres, genre]);\r\n    setGenres(genres.filter((g) => g.id !== genre.id));\r\n    setPage(1);\r\n  };\r\n\r\n  const handleRemove = (genre) => {\r\n    setSelectedGenres(\r\n      selectedGenres.filter((selected) => selected.id !== genre.id)\r\n    );\r\n    setGenres([...genres, genre]);\r\n    setPage(1);\r\n  };\r\n\r\n  const fetchGenres = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n    setGenres(data.genres);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGenres();\r\n\r\n    return () => {\r\n      setGenres({}); // unmounting\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"6px 0\" }}>\r\n      {selectedGenres.map((genre) => (\r\n        <Chip\r\n          style={{ margin: 2 }}\r\n          label={genre.name}\r\n          key={genre.id}\r\n          color=\"primary\"\r\n          clickable\r\n          size=\"small\"\r\n          onDelete={() => handleRemove(genre)}\r\n        />\r\n      ))}\r\n      {genres.map((genre) => (\r\n        <Chip\r\n          style={{ margin: 2 }}\r\n          label={genre.name}\r\n          key={genre.id}\r\n          clickable\r\n          size=\"small\"\r\n          onClick={() => handleAdd(genre)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genres;","const useGenre = (selectedGenres) => {\r\n    if(selectedGenres.length<1) return \"\";\r\n\r\n    const GenreIds = selectedGenres.map((g) => g.id);\r\n    return GenreIds.reduce((acc, curr) => acc+','+curr);\r\n}\r\n\r\nexport default useGenre;","import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport Genres from \"../../components/Genres\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\n\r\nconst Movies = () => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [content, setContent] = useState([]);\r\n    const [numOfPages, setNumOfPages] = useState();\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const gerneForURL = useGenre(selectedGenres);\r\n\r\n    const fetchMovies=async () => {\r\n        const { data } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${gerneForURL}`);\r\n\r\n        setContent(data.results);\r\n        setNumOfPages(data.total_pages);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page, gerneForURL])\r\n\r\n    return (\r\n        <div>\r\n            <span className='pageTitle'>Movies</span>\r\n            <Genres\r\n                type=\"movie\" \r\n                selectedGenres={selectedGenres} \r\n                genres={genres} \r\n                setSelectedGenres={setSelectedGenres} \r\n                setGenres={setGenres}\r\n                setPage={setPage}\r\n            />\r\n            <div className=\"trending\">\r\n                {content && \r\n                    content.map((c) => (\r\n                    <SingleContent key={c.id} id={c.id} poster={c.poster_path} title={c.title || c.name} date={c.fisrt_air_date || c.release_date} media_type=\"movie\" vote_average={c.vote_average} />\r\n                    ))\r\n                }\r\n            </div>\r\n            {numOfPages>1 && (\r\n            <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Genres from \"../../components/Genres\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\nconst Series = () => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [content, setContent] = useState([]);\r\n    const [numOfPages, setNumOfPages] = useState();\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const gerneForURL = useGenre(selectedGenres);\r\n\r\n    const fetchMovies=async () => {\r\n        const { data } = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${gerneForURL}`);\r\n\r\n        setContent(data.results);\r\n        setNumOfPages(data.total_pages);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page, gerneForURL])\r\n\r\n    return (\r\n        <div>\r\n            <span className='pageTitle'>TV Series</span>\r\n            <Genres\r\n                type=\"tv\" \r\n                selectedGenres={selectedGenres} \r\n                genres={genres} \r\n                setSelectedGenres={setSelectedGenres} \r\n                setGenres={setGenres}\r\n                setPage={setPage}\r\n            />\r\n            <div className=\"trending\">\r\n                {content && \r\n                    content.map((c) => (\r\n                    <SingleContent \r\n                        key={c.id} \r\n                        id={c.id} \r\n                        poster={c.poster_path} \r\n                        title={c.title || c.name} \r\n                        date={c.fisrt_air_date || c.release_date} \r\n                        media_type=\"tv\" \r\n                        vote_average={c.vote_average} />\r\n                    ))\r\n                }\r\n            </div>\r\n            {numOfPages>1 && (\r\n            <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Series\r\n","import { Button, createMuiTheme, Tab, Tabs, TextField, ThemeProvider } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\n\r\nconst Search = () => {\r\n\r\n    const [type, setType] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [content, setContent] = useState();\r\n    const [numOfPages, setNumOfPages] = useState();\r\n\r\n    const darkTheme = createMuiTheme({\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const fetchSearch = async () => {\r\n        try {\r\n          const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${\r\n              process.env.REACT_APP_API_KEY\r\n            }&language=en-US&query=${searchText}&page=${page}&include_adult=false`\r\n          );\r\n          setContent(data.results);\r\n          setNumOfPages(data.total_pages);\r\n          // console.log(data);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      useEffect(() => {\r\n        window.scroll(0, 0);\r\n        fetchSearch();\r\n        // eslint-disable-next-line\r\n      }, [type, page]);\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={darkTheme}>\r\n            <div style={{ display: \"flex\", margin: \"15px 0\" }}>\r\n            <TextField\r\n                style={{ flex: 1}}\r\n                className=\"searchBox\"\r\n                label=\"Search\"\r\n                variant=\"filled\"\r\n                onChange={(e) => setSearchText(e.target.value)}\r\n            />\r\n            <Button variant='contained' style={{ marginLeft: 10 }} onClick={fetchSearch}>\r\n                <SearchIcon/> \r\n            </Button>\r\n            </div>\r\n\r\n            <Tabs \r\n                value={type} \r\n                indicatorColor='primary' \r\n                textColor='primary'\r\n                onChange={(event, newValue)=>{\r\n                    setType(newValue);\r\n                    setPage(1);\r\n                }}\r\n                style={{ paddingBottom: 5 }}\r\n                >\r\n                <Tab style={{width: \"50%\"}} label=\"Search Movies\" />\r\n                <Tab style={{width: \"50%\"}} label=\"Search TV Series\" />\r\n            </Tabs>\r\n            </ThemeProvider>\r\n            <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type={type ? \"tv\" : \"movie\"}\r\n              vote_average={c.vote_average}\r\n            />\r\n          ))}\r\n        {searchText &&\r\n          !content &&\r\n          (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\r\n        </div>\r\n        {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { Container } from '@material-ui/core';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport SimpleBottomNavigation from './components/MainNav';\nimport Trending from './Pages/Trending/Trending';\nimport Movies from './Pages/Movies/Movies';\nimport Series from './Pages/Series/Series';\nimport Search from './Pages/Search/Search';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n    <div className=\"app\">\n    <Container>\n      <Switch>\n        <Route path='/' component={Trending} exact/>\n        <Route path='/movies' component={Movies}/>\n        <Route path='/series' component={Series}/>\n        <Route path='/search' component={Search}/>\n      </Switch>\n    </Container>\n    </div>\n\n\n    <SimpleBottomNavigation />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}